name: Build & Publish
on:
 workflow_dispatch: 
 push:
   branches: 
     - main
   paths:
    - src/**
    - pom.xml

jobs:
  release:
    runs-on: ubuntu-latest
    permissions: write-all
    name: GITHUB_TOKEN
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found
      - name: Determine Version Increment
        id: determine_version
        run: |
          COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.sha }})
          if [[ $COMMIT_MESSAGE == *"BREAKING"* ]]; then
            echo "::set-output name=increment::major"
          elif [[ $COMMIT_MESSAGE == *"FEATURE"* ]]; then
            echo "::set-output name=increment::minor"
          elif [[ $COMMIT_MESSAGE == *"PATCH"* ]] || [[ $COMMIT_MESSAGE == *"DEPENDENCY"* ]]; then
            echo "::set-output name=increment::patch"
          else
            echo "::set-output name=increment::none"
          fi
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.previoustag.outputs.tag }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Release ${{ github.ref }}
            Auto-generated release notes.

      - name: Generate Tag
        id: generate_tag
        run: |
          VERSION_INCREMENT=${{ steps.determine_version.outputs.increment }}
          if [[ $VERSION_INCREMENT != "none" ]]; then
            CURRENT_TAG=$(echo ${{ github.ref }} | sed 's/refs\/tags\///g')
            if [[ $CURRENT_TAG =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              IFS='.' read -ra PARTS <<< "$CURRENT_TAG"
              MAJOR=${PARTS[0]}
              MINOR=${PARTS[1]}
              PATCH=${PARTS[2]}
              if [[ $VERSION_INCREMENT == "major" ]]; then
                MAJOR=$((MAJOR + 1))
                MINOR=0
                PATCH=0
              elif [[ $VERSION_INCREMENT == "minor" ]]; then
                MINOR=$((MINOR + 1))
                PATCH=0
              elif [[ $VERSION_INCREMENT == "patch" ]]; then
                PATCH=$((PATCH + 1))
              fi
              TAG="$MAJOR.$MINOR.$PATCH"
              echo "TAG=$TAG" >> $GITHUB_ENV
            fi
          fi
  
  # BuildApp:
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3 

  #     - name: Setup jdk
  #       uses: actions/setup-java@v3
  #       with:
  #           distribution: 'zulu' 
  #           java-version: '17'
  #     - name: Build 
  #       run: |
  #           mvn clean install
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Build Docker Image
  #       run: |
  #         docker build . -t specialops/devopsgym:$GITHUB_RUN_NUMBER
  #         docker push specialops/devopsgym:$GITHUB_RUN_NUMBER

